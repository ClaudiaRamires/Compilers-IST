
// AUTOMATICALLY GENERATED BY CDK -- DO NOT EDIT
#include <cdk/ast/visitor_decls.h>

#ifdef __IN_VISITOR_HEADER__
#ifdef __PURE_VIRTUAL_DECLARATIONS_ONLY__
  virtual void do_address_node(fir::address_node *const node, int lvl) = 0;
  virtual void do_block_node(fir::block_node *const node, int lvl) = 0;
  virtual void do_declaration_variable_node(fir::declaration_variable_node *const node, int lvl) = 0;
  virtual void do_evaluation_node(fir::evaluation_node *const node, int lvl) = 0;
  virtual void do_for_other_wise_node(fir::for_other_wise_node *const node, int lvl) = 0;
  virtual void do_function_call_node(fir::function_call_node *const node, int lvl) = 0;
  virtual void do_function_decl_node(fir::function_decl_node *const node, int lvl) = 0;
  virtual void do_function_def_node(fir::function_def_node *const node, int lvl) = 0;
  virtual void do_identity_node(fir::identity_node *const node, int lvl) = 0;
  virtual void do_if_else_node(fir::if_else_node *const node, int lvl) = 0;
  virtual void do_if_node(fir::if_node *const node, int lvl) = 0;
  virtual void do_index_node(fir::index_node *const node, int lvl) = 0;
  virtual void do_indexationptr_node(fir::indexationptr_node *const node, int lvl) = 0;
  virtual void do_leave_node(fir::leave_node *const node, int lvl) = 0;
  virtual void do_memory_reserve_node(fir::memory_reserve_node *const node, int lvl) = 0;
  virtual void do_nullptr_node(fir::nullptr_node *const node, int lvl) = 0;
  virtual void do_prologo_node(fir::prologo_node *const node, int lvl) = 0;
  virtual void do_read_node(fir::read_node *const node, int lvl) = 0;
  virtual void do_restart_node(fir::restart_node *const node, int lvl) = 0;
  virtual void do_return_node(fir::return_node *const node, int lvl) = 0;
  virtual void do_size_of_node(fir::size_of_node *const node, int lvl) = 0;
  virtual void do_while_node(fir::while_node *const node, int lvl) = 0;
  virtual void do_write_node(fir::write_node *const node, int lvl) = 0;

#else
  void do_address_node(fir::address_node *const node, int lvl);
  void do_block_node(fir::block_node *const node, int lvl);
  void do_declaration_variable_node(fir::declaration_variable_node *const node, int lvl);
  void do_evaluation_node(fir::evaluation_node *const node, int lvl);
  void do_for_other_wise_node(fir::for_other_wise_node *const node, int lvl);
  void do_function_call_node(fir::function_call_node *const node, int lvl);
  void do_function_decl_node(fir::function_decl_node *const node, int lvl);
  void do_function_def_node(fir::function_def_node *const node, int lvl);
  void do_identity_node(fir::identity_node *const node, int lvl);
  void do_if_else_node(fir::if_else_node *const node, int lvl);
  void do_if_node(fir::if_node *const node, int lvl);
  void do_index_node(fir::index_node *const node, int lvl);
  void do_indexationptr_node(fir::indexationptr_node *const node, int lvl);
  void do_leave_node(fir::leave_node *const node, int lvl);
  void do_memory_reserve_node(fir::memory_reserve_node *const node, int lvl);
  void do_nullptr_node(fir::nullptr_node *const node, int lvl);
  void do_prologo_node(fir::prologo_node *const node, int lvl);
  void do_read_node(fir::read_node *const node, int lvl);
  void do_restart_node(fir::restart_node *const node, int lvl);
  void do_return_node(fir::return_node *const node, int lvl);
  void do_size_of_node(fir::size_of_node *const node, int lvl);
  void do_while_node(fir::while_node *const node, int lvl);
  void do_write_node(fir::write_node *const node, int lvl);

#endif /* !defined(__PURE_VIRTUAL_DECLARATIONS_ONLY__) */
#endif /* __IN_VISITOR_HEADER__ */

